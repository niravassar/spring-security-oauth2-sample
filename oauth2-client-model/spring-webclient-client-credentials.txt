Research================================Example of Resource server and spring----------------------------------------- https://developer.okta.com/blog/2021/05/05/client-credentials-spring-securityGood concept diagram of authorization server vs resource server---------------------------------------https://dev.to/relive27/spring-security-oauth2-client-credentials-grant-fj5https://github.com/ReLive27/spring-security-oauth2-sample/tree/main/oauth2-client-modelAuthorization Server and Resource Server with Client Implementation-------------------------------------https://dev.to/relive27/using-jwt-with-spring-security-oauth2-41jpAnother Example of Auth Server and client-----------------------------------------https://www.javainuse.com/spring/springboot-oauth2-client-grantThoughts on what to do------------------------------------------------ [] run a sample of webclient and authserver- [] get it to do two different client ids- [] then try to make client dynamic with different client ids- [] Alternate would be to find a public authserver to test out -- or use the fidelity one- [] look up dynamic client credentials- [] check in code to my personal github- [] check in collectionHow to make a postman request client credentials----------------------------------------------------- https://www.postman.com/epcc-fan-guide/step-by-step/request/qsj3o2f/auth-client-credentialsNOTE CONCEPT on Oauth-----------------Client - is the app that wants to access and has client id and secret. it calls Authorization Server and gets permitted, then auth servers sends it a jwt token. Then client sends the JWT token to the Resources ServerAuthorization Server is what issues the jwt and authorizesResource Server is the server which is the backed -- it calls the authorization server to ask if the jwt receievs is good to goSample Server Spring Authorization===========================================- https://github.com/ReLive27/spring-security-oauth2-sample/tree/main/oauth2-client-model- https://github.com/niravassar/oauth2-client-model- project is under: oauth2-client-model- start the app with spring-boot:run- this worked with postman call with to bring back a token	- set a global variable to get a client_token	curl --location --request POST 'http://127.0.0.1:8080/oauth2/token' \	--header 'Content-Type: application/x-www-form-urlencoded' \	--data-urlencode 'grant_type=client_credentials' \	--data-urlencode 'client_id=relive-client' \	--data-urlencode 'client_secret=relive-client'- resource GET worked	- ** Added to add scope : message.read to the oauth token privelidges												=======================================================NOT WORKING ===============================Authorization Workflow -- DINT WORK----------------------------------Oauth playground-------------------------------- https://www.oauth.com/playground/login:	 	wild-marten@example.compassword: 	Poor-Hawk-10client_id: 		B-Ueq9M830xz6CSknne_2UOlclient_secret: 	zasWUxCwqpdVymp5zm68XpEc1TK2N8kULKRkhbZBgNcWNC3KAuthorization URLhttps://authorization-server.com/authorize?  response_type=code  &client_id=B-Ueq9M830xz6CSknne_2UOl  &redirect_uri=https://www.oauth.com/playground/authorization-code.html  &scope=photo+offline_access  &state=PE1BfcwE-mgUtUOB  Redirect URLhttps://www.oauth.com/playground/authorization-code.html?state=PE1BfcwE-mgUtUOB&code=DJPcVO-2eBjs2WWjWlOcXUPW-7pFW7uYth88UmnswuNhxjLOAuthorization Code flowPOST https://authorization-server.com/tokengrant_type=authorization_code&client_id=B-Ueq9M830xz6CSknne_2UOl&client_secret=zasWUxCwqpdVymp5zm68XpEc1TK2N8kULKRkhbZBgNcWNC3K&redirect_uri=https://www.oauth.com/playground/authorization-code.html&code=DJPcVO-2eBjs2WWjWlOcXUPW-7pFW7uYth88UmnswuNhxjLOToken Endpoint ResponseHere's the response from the token endpoint! The response includes the access token and refresh token.{  "token_type": "Bearer",  "expires_in": 86400,  "access_token": "zIdRKjdsqwetxoGhSpqEuVfFxVlXIJNUGr9zPVJtENhrzSpca32XzTGFItXZIARvZoMAv1wx",  "scope": "photo offline_access",  "refresh_token": "YOQF0VtEs2NiuP-EJDtNLVa7" } curl --location 'https://authorization-server.com/token' --data-urlencode 'client_id=B-Ueq9M830xz6CSknne_2UOl' --data-urlencode 'client_secret=zasWUxCwqpdVymp5zm68XpEc1TK2N8kULKRkhbZBgNcWNC3K' --data-urlencode 'grant_type=client_credentials'	